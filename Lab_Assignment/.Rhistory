knitr::opts_chunk$set(echo = TRUE)
# Loading the data
data(mtcars)
# Head of the data set
head(mtcars)
# Enter your code here!
num_variables <- ncol(mtcars)
num_observations <- nrow(mtcars)
# Answer:
print("There are 11 discrete variables and 32 continuous variables in this data set.")
)
# Enter your code here!
m <- mean(mtcars$mpg)
v <- var(mtcars$mpg)
s <- sd(mtcars$mpg)
print(paste("The average of Mile Per Gallon from this data set is ", m , " with variance ",  v, " and standard deviation",s  , "."))
# Enter your code here!
library(dplyr)
# Enter your code here!
library(dplyr)
# Enter your code here!
install.packages("dplyr")
# Enter your code here!
install.packages("dplyr")
library(dplyr)
# Table 1: Average mpg for each cylinder class
avg_mpg_by_cyl <- mtcars %>%
group_by(cyl) %>%
summarise(Average_MPG = mean(mpg))
# Table 1: Print
print("Average MPG by Cylinder Class:")
print(avg_mpg_by_cyl)
```
# Table 2: Standard deviation of mpg for each gear class
sd_mpg_by_gear <- mtcars %>%
group_by(gear) %>%
summarise(Standard_Deviation_MPG = sd(mpg))
# Table 2: Standard deviation of mpg for each gear class
sd_mpg_by_gear <- mtcars %>%
group_by(gear) %>%
summarise(Standard_Deviation_MPG = sd(mpg))
print(sd_mpg_by_gear)
# Table 2: Print
print("Standard Deviation of MPG by Gear Class:")
print(sd_mpg_by_gear)
crosstab <- table(mtcars$cyl, mtcars$gear)
print(crosstab)
max_count <- max(crosstab)
most_common_combination <- which(crosstab == max_count, arr.ind = TRUE)
num_cylinders <- most_common_combination[1, 1]
num_gears <- most_common_combination[1, 2]
total_cars <- max_count
# Load the data set
data("PlantGrowth")
# Head of the data set
head(PlantGrowth)
# Enter your code here!
library(ggplot2)
# Enter your code here!
install.packages("ggplot2")
library(ggplot2)
Sys.which("make")
ggplot(PlantGrowth, aes(x = group, y = weight)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Comparison of Plant Weights by Group",
x = "Group",
y = "Weight (grams)") +
theme_minimal()
View(PlantGrowth)
View(PlantGrowth)
data(mtcars)
hist(mtcars$mpg, breaks = 10,
main = "Histogram of Miles Per Gallon (MPG)",
xlab = "Miles Per Gallon (MPG)",
ylab = "Frequency",
col = "lightblue",
border = "darkblue")
most_observed_mpg <- as.numeric(names(which.max(table(mtcars$mpg))))
hist(mtcars$mpg, breaks = 10,
main = "Histogram of Miles Per Gallon (MPG)",
xlab = "Miles Per Gallon (MPG)",
ylab = "Frequency",
col = "lightblue",
border = "darkblue")
hist(mtcars$mpg, breaks = 5,
main = "Histogram of Miles Per Gallon (MPG)",
xlab = "Miles Per Gallon (MPG)",
ylab = "Frequency",
col = "lightblue",
border = "darkblue")
hist(mtcars$mpg, breaks = 20,
main = "Histogram of Miles Per Gallon (MPG)",
xlab = "Miles Per Gallon (MPG)",
ylab = "Frequency",
col = "lightblue",
border = "darkblue")
# Load the data set
data("USArrests")
# Head of the data set
head(USArrests)
# Enter your code here!
pairs(USArrests,
main = "Pairs Plot of US Arrests Data",
pch = 19,
col = "lightblue")
plot(USArrests$Murder, USArrests$Assault,
main = "Scatter Plot of Murder vs. Assault",
xlab = "Murder Rate",
ylab = "Assault Rate",
pch = 19,
col = "darkblue")
# Enter your code here!
pairs(USArrests,
main = "Pairs Plot of US Arrests Data",
pch = 19,
col = "lightblue")
plot(USArrests$Murder, USArrests$Assault,
main = "Scatter Plot of Murder vs. Assault",
xlab = "Murder Rate",
ylab = "Assault Rate",
pch = 19,
col = "darkblue")
# Load and clean the housing data set
download.file(url='https://www.jaredlander.com/data/housing.csv',
destfile='data/housing.csv', mode='wb')
housingData <- read.csv('data/housing.csv')
# Load and clean the housing data set
download.file(url='https://www.jaredlander.com/data/housing.csv',
destfile='data/housing.csv', mode='wb')
housingData <- read.csv('data/housing.csv')
housingData <- subset(housingData,
select = c("Neighborhood", "Market.Value.per.SqFt", "Boro", "Year.Built"))
housingData <- na.omit(housingData)
# Enter your code here!
avg_value_neighborhood <- housingData %>%
group_by(Neighborhood) %>%
summarise(Average_Value = mean(Market.Value.per.SqFt))
avg_value_borough <- housingData %>%
group_by(Boro) %>%
summarise(Average_Value = mean(Market.Value.per.SqFt))
# Enter your code here!
summary_stats <- housingData %>%
summarise(
Mean_Value = mean(Market.Value.per.SqFt),
Median_Value = median(Market.Value.per.SqFt),
Max_Value = max(Market.Value.per.SqFt),
Min_Value = min(Market.Value.per.SqFt)
)
print(summary_stats)
print(avg_value_neighborhood)
print(avg_value_borough)
print(summary_stats)
print(avg_value_neighborhood)
print(avg_value_borough)
# Enter your code here!
ggplot(housingData, aes(x = Year.Built, y = Market.Value.per.SqFt)) +
geom_point(alpha = 0.5) +
labs(title = "Market Value per SqFt vs Year Built",
x = "Year Built",
y = "Market Value per SqFt") +
theme_minimal()
ggplot(housingData, aes(x = Boro, y = Market.Value.per.SqFt)) +
geom_boxplot() +
labs(title = "Market Value per SqFt by Borough",
x = "Borough",
y = "Market Value per SqFt") +
theme_minimal()
print(avg_value_neighborhood)
print(avg_value_borough)
chooseCRANmirror()
rmarkdown::render("R_Lab_Assignment.Rmd")
